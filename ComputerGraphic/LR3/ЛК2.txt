ЛК 2
Содержание
I. Алгоритм Брезенхема
II. Обобщение алгоритма Брезенхема
III. Линейная интерполяция цвета при выводе отрезка
IV. Сплайн Безье
V. В-сплайн

I. Алгоритм Брезенхема

Параметры:
  dx = x1 – x0; dy = y1 – y0; k = dy / dx
Ограничения:
  первый квадрант; 
  x1 > x0; - y1 > y0; 0 ≤ k ≤ 1. 

Вариант 1 (тривиальный). 
  x = x0 
  пока x ≤ x1: 
    y = [kx + b] # Целая часть числа 
    Залить(x, y) 
    x = x + 1 

Вариант 2 (без умножения на k, контроль ci).
  x = x0 
  y = y0 
  ci = 0 
  пока x ≤ x1:
    Залить(x, y) 
    x = x + 1 
    ci = ci + k 
    если ci > 0.5: 
      y = y + 1
      ci = ci - 1 # см. пояснения ниже
Пояснения:
  (1) yi = kxi + b – ci (см. рис. 2) 
  (2) yi+1 = kxi+1 + b – ci+1  # xi+1 = xi + 1
  xi+1 – xi = 1 
  yi+1 – yi = 1 (ci > 0.5) 
  (2) – (1): 1 = k – ci+1 + ci 
  ci+1 = ci + k – 1 (см. выше перед "если" ci = ci + k) 

Вариант 3 (замена ci > 0.5 на d > 0).
  k = dy / dx # Из d > 0 следует, что d = 2ci – 1
  x = x0 
  y = y0 
  d = –1 
  пока x ≤ x1:
    Залить(x, y)
    x = x + 1 
    d = d + 2k # см. пояснения ниже
    если d > 0:
      y = y + 1
      d = d – 2 # см. пояснения ниже
Пояснения:
  а)
    ci = ci + k 
    2ci = 2ci + 2k 
    2ci – 1 = 2ci – 1 + 2k, то есть d = d + 2k
  б)
    ci = ci - 1
    2ci = 2ci - 2
    2ci - 1 = 2ci - 1 - 2, то есть d = d - 2

Вариант 4 (целочисленный) - алгоритм Брезенхема.
  k = dy # Прежний k = dy / dx умножаем на dx 
  Тогда вместо: 
  d = –1 имеем d = –dx 
  d = d – 2 имеем d = d – 2dx 
  d = d + 2k имеем d = d + 2dy
  Алгоритм:
  x = x0 # k = dy не нужен
  y = y0 
  d = –dx
  dx2 = dx + dx
  dy2 = dy + dy
  пока x ≤ x1: 
    Залить(x, y) 
    x = x + 1 
    d = d + dy2
    если d > 0:
      y = y + 1
      d = d – dx2

II. Обобщение алгоритма Брезенхема
Входные данные: 
  x0, y0 – координаты начала отрезка; 
  x1, y1 – координаты конца отрезка; 
  vp – массив значений пикселей окна вывода формы (w, h),
  где w, h - соотвественно ширина и высота окна.
  vp = 255.
Выходные данные: 
  vp – заполненный массив значений пикселей.
Алгоритм:
  1. Начало. 
  2. vp = 255 # Белый цвет 
  3. steep = abs(y1 - y0) > abs(x1 - x0) # Крутизна 
  4. Если steep: # Обмен X, Y, если угол наклона отрезка более 45º 
       x0, y0 = y0, x0 # Обмен
       x1, y1 = y1, x1 # Обмен
  5. Если x0 > x1: # Приводим к базовой форме алгоритма, в которой x0 < x1 
       x0, x1 = x1, x0 # Обмен
       y0, y1 = y1, y0 # Обмен
  6. dx = x1 – x0; dy = abs(y1 – y0) 
  7. dx2 = dx + dx; dy2 = dy + dy
  8. d = –dx 
  9. y_step = 1 Если y0 < y1 Иначе –1 # Шаг по Y 
 10. y = y0; x = x0 
 11. Пока x ≤ x1: 
       Если steep: # Нужен обмен
         xp, yp = y, x # Обмен
       Иначе: 
         xp, yp = x, y 
       vp[yp, xp] = 0 # Черный цвет 
       d = d + dy2 
       Если d > 0: 
         y = y + y_step # 1 или -1
         d = d – dx2 
       x = x + 1 
 12. Вывод vp.
 13. Останов.

III. Линейная интерполяция цвета при выводе отрезка
RGB. Берем R.
R1, R2 - известны. R3 - ?
R3 = (1 - t) * R1 + t * R2,
где t = d13 / d12

IV. Сплайн Безье
http://www.100byte.ru/100btwrks/cg/cg.html#P8_1
Описывается следующим векторным параметрическим уравнением:

B(t) = SUM(i = 0, m) [C(m, i) * t^i * (1 - t)^(m - i) * V(i)], 0 <= t <= 1
C(m, i) = m! / (i! * (m - i)!) - биномиальные коэффициенты.
V0, V1, ..., Vm - контрольные (опорные) вершины.
Ломаная V0, V1, ..., Vm называется контрольной ломаной.

Свойства кривой Безье:
- является гладкой;
- начинается в точке V0 и заканчивается в точке Vm, касаясь отрезков V0, V1 и Vm-1, Vm контрольной ломаной;
- функциональные коэффициенты при вершинах Vi, i = 0, 1, 2, ..., m - суть универсальные многочлены (многочлены Бернштейна, не зависят от координат контрольных вершин); они неотрицательны, их сумма равна единице.
SUM(i = 0, m) C(m, i) * t^i * (1 - t)^(m - i) = (t + (1 - t))^m = 1.

При работе с кривыми Безье обнаруживаются следующие недостатки:
- Степень кривой Безье меняется при изменении числа опорных точек (на единицу меньше).
- При изменении числа опорных точек необходим полный пересчет всех функциональных коэффициентов.
- Изменение координат хотя бы одной опорной точки приводит к заметному изменению вида всей кривой.
На практике удобнее работать с составными кубическими кривыми Безье. Чтобы составная кривая Безье, определяемая набором вершин V0, V1, … Vm, была:
- G1-непрерывной кривой, необходимо, чтобы каждые три точки V3i-1, V3i, V3i+1 этого набора лежали на одной прямой.
- Замкнутой G1-непрерывной кривой, необходимо, кроме того, чтобы совпадали первая и последняя точки, V0 = Vm, и три точки Vm-1, Vm, V1 лежали на одной прямой.
- G2-непрерывной кривой, необходимо, вдобавок, чтобы каждые пять точек V3i-2, V3i-1, V3i, V3i+1, V3i+2 (i ≥ 1) заданного набора лежали в одной плоскости.

V. В-сплайн
http://www.100byte.ru/100btwrks/cg/cg.html#P8_2
По заданному набору контрольных вершин V0, V1, V2, V3 элементарная кубическая B-сплайновая кривая
задается следующим векторным параметрическим уравнением:

R(t) = N0(t) * V0 + N1(t) * V1 + N2(t) * V2 + N3(t) * V3; 0 <= t <= 1;
N0(t) =(1 − t)^3 / 6,
N1(t) = (3t^3 − 6t^2 + 4) / 6,
N2(t) = (−3t^3 + 3t^2 + 3t + 1) / 6,
N3(t) = t^3 / 6.

Функциональные коэффициенты в уравнении B-сплайновой кубической кривой
неотрицательны, в сумме составляют единицу, универсальны - не зависят от координат контрольных вершин.
Элементарный фрагмент лежит внутри выпуклой оболочки заданных вершин - четырехугольника
(в плоском случае) или тетраэдра (в пространственном случае).
Составная кубическая B-сплайновая кривая, определяемая набором контрольных вершин
V0, V1, ... Vm-1, Vm, (m ≥ 3),
является объединением m - 2 элементарных кубических B-сплайнов, которые описываются уравнениями вида

Ri(t) = (Vi-1 +Vi + Vi+1 + Vi+2)M(1, d, d^2, d^3)^T; i - 1 <= t <= i, i = 1, ..., m - 2.
M = [[1 -3 3 1] [4 0 -6 3] [1 2 3 -3] [0 0 0 1]] - базисная матрица B-сплайновой кривой.
d = t - i + 1

Составная B-сплайновая кубическая кривая:
- является G2-гладкой кривой (непрерывна 2-я производная);
- лежит в объединении m - 2 выпуклых оболочек, порожденных последовательными четверками контрольных вершин.
При двукратном дублировании первой и последней контрольных вершин
V0 = V1 = V2 и Vm-2 = Vm-1= Vm
получим составную B-сплайновую кубическую кривую, которая начинается в V0,
касаясь отрезка V0V3, и заканчивается в Vm, касаясь отрезка Vm-3Vm.
Чтобы получить G2-гладкий замкнутый составной кубический B-сплайн (рис. 4.4), следует первые три контрольные вершины повторить в конце набора:
Vm-2 = V0, Vm-1 = V1 и Vm = V2.

ЛР 4. Задание.
1. Реализовать алгоритм Брезенхема для отрезка прямой.
2. Сгенерировать и отобразить N (N > 8) случайных точек (случай 2D).
3. Построить по этим точкам кубический B-сплайн, проходящий через начальную и конечную точку
  (вариант: построить по этим точкам сплайн Безье).
4. Аппроксимировать, использовав алгоритм Брезенхема, полученный сплайн отрезками прямых.
   (кусочно-линейная аппроксимация).

Контрольные вопросы - по лекционному материалу (сплайны, алгоритм Брезенхема и пр.).